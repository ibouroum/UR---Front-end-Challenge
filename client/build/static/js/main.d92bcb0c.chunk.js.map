{"version":3,"sources":["commun/snackBar.js","components/home.js","actions/dataAction.js","containers/home.js","components/notFoundPage.js","routes.js","commun/navbar.js","commun/footer.js","App.js","serviceWorker.js","sagas/helper.js","sagas/dataSaga.js","sagas/index.js","reducers/dataReducer.js","reducers/index.js","store.js","index.js","images/404.png"],"names":["MyFlash","props","msg","variant","enqueueSnackbar","useSnackbar","useEffect","Snackbar","anchorOrigin","vertical","horizontal","style","marginTop","autoHideDuration","maxSnack","useStyles","makeStyles","theme","root","width","maxHeight","margin","boxShadow","header","media","height","content","actions","chip","Home","classes","data","getDays","status","error","Grid","container","justify","isData","Data","map","Card","key","Math","random","className","CardHeader","title","name","subheader","created_at","owner","login","CardMedia","image","avatar_url","CardContent","Typography","color","component","description","CardActions","disableSpacing","Chip","label","stargazers_count","open_issues_count","getDataSuccess","getDataError","mapDispatchToProps","indice","connect","state","getData","useState","setIndice","window","onscroll","ev","innerHeight","scrollY","document","body","offsetHeight","a","today","Date","date","getDate","NotFoundPage","src","img","alt","Routes","exact","path","app","backgroundColor","Navbar","AppBar","position","Toolbar","noWrap","borderTop","textAlign","padding","left","bottom","phantom","display","Copyright","align","href","getFullYear","Footer","App","Boolean","location","hostname","match","request","config","token","axios","call","response","select","oldData","newData","items","concat","put","takeLatest","all","fork","dataSaga","DEFAULT_STATE","action","type","combinedReducers","history","combineReducers","connectRouter","dataReducer","createBrowserHistory","sagaMiddleware","createSagaMiddleware","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","rootReducer","applyMiddleware","routerMiddleware","run","rootSaga","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d92bcb0c.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nfunction MyFlash(props) {\n    const {msg, variant} = props;\n    const { enqueueSnackbar } = useSnackbar();\n    useEffect(() => {\n        if(msg && variant)\n                enqueueSnackbar(msg, { variant: variant });\n    }, [])\n    return(<></>);\n}\n\nexport default function Snackbar(props){\n    const {msg, variant} = props;\n    return(\n        <SnackbarProvider\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            style={{marginTop: '49px'}}\n            autoHideDuration={4000}\n            maxSnack={5}\n        >\n            <MyFlash msg={msg} variant={variant}/>\n        </SnackbarProvider>\n    );\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport SnackBar from '../commun/snackBar';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 400,\n    maxHeight : 500,\n    margin : 5,\n    boxShadow: 3,\n  },\n  header: {\n    width : 400,\n    maxHeight: 50,\n  },\n  media: {\n    height: 250,\n    width:400\n  },\n  content: {\n    width : 400,\n    maxHeight: 180,\n  },\n  actions: {\n    width : 400,\n    maxHeight: 20,\n  },\n  chip: {\n    margin : 5,\n  },\n}));\n\nconst Home = (props) => {\n  const classes = useStyles();\n  const {data,getDays} = props;\n  return (\n    <>\n    {(data.status === 400 || data.status === 500) && <SnackBar variant=\"error\" msg = {data.error} />}\n    <Grid container justify=\"center\">\n    {data.isData === true && data.Data.map((data) =>\n      <Card key={Math.random()} className={classes.root}>\n      <CardHeader\n        className={classes.header}\n        title={data.name}\n        subheader={\"Submitted \" + getDays(data.created_at) + \" days ago by\" + data.owner.login}\n      />\n      <CardMedia\n        className={classes.media}\n        image={data.owner.avatar_url}\n      />\n      <CardContent className={classes.content}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {data.description ? data.description : 'No description'}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing className={classes.actions}>\n      <Chip className={classes.chip} label={'Stars :' +data.stargazers_count+'k'} variant=\"outlined\" />\n      <Chip className={classes.chip} label={'Issues :' +data.open_issues_count+'k'}variant=\"outlined\" />\n      </CardActions>\n    </Card>)\n    }\n    </Grid>\n    \n    </>\n  );\n}\nexport default Home;","export const GET_DATA = \"GET_DATA\"\nexport const GET_DATA_SUCCESS = \"GET_DATA_SUCCESS\"\nexport const GET_DATA_ERROR = \"GET_DATA_ERROR\"\n\nexport const getData = (indice) =>({\n    \"type\": GET_DATA,\n    indice\n});\n\nexport const getDataSuccess = (data) =>({\n    \"type\": GET_DATA_SUCCESS,\n    status : data.status,\n    Data : data.Data\n});\n\nexport const getDataError = (data) =>({\n    \"type\": GET_DATA_ERROR,\n    status : data.status,\n    error : data.error\n});","import React,{useState,useEffect}from 'react'\nimport Home from '../components/home';\nimport {connect} from \"react-redux\";\nimport {getData} from '../actions/dataAction'\nconst HomeContainer = (props) => {\n    const {getData,data} = props;\n    const [indice,setIndice] = useState(0);\n    useEffect(() =>{\n        getData(indice);\n    },[]);\n    const getDays = (a) => {\n        let today = new Date();\n        let date = new Date(a);\n        let day = today.getDate() - date.getDate();\n        return (30-day);\n    }\n    window.onscroll = function(ev) {\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n            setIndice(indice + 1);\n            getData(indice);\n        }\n    };\n    \n    return (\n        <div>\n            <Home data={data} getDays={getDays}/>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    \"data\" : state.data,\n});\nconst mapDispatchToProps = {\n    \"getData\" : getData\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeContainer);\n","import React from 'react'\nimport img from '../images/404.png';\nconst NotFoundPage = () => {\n    return (\n        <img src={img} style={{width: '97%', height: '100%'}} alt=\"NotFoundPage\"/>\n    )\n}\nexport default NotFoundPage","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Home from './containers/home';\nimport NotFoundPage from './components/notFoundPage';\n\nconst Routes = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path = \"/\" component={Home} />\n                <Route exact path = \"/home\" component={Home} />\n                <Route path=\"\" component={NotFoundPage}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    app: {\n        backgroundColor: \"#FFFFFF\",\n      },\n      title: {\n        backgroundColor: \"primary\",\n      },\n}));\n\n const Navbar = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position=\"static\" className={classes.app} >\n        <Toolbar >\n          <Typography color=\"primary\" variant=\"h6\" noWrap>\n           Menu\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default Navbar;","import React from 'react';\nimport Hink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nvar style = {\n  backgroundColor: \"#FFFFFF\",\n  borderTop: \"3px solid #E7E7E7\",\n  textAlign: \"center\",\n  padding: \"20px\",\n  position: \"fixed\",\n  left: \"0\",\n  bottom: \"0\",\n  height: \"30\",\n  width: \"100%\",\n}\n\nvar phantom = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n}\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {'Copyright © '}\n          <Hink color=\"inherit\" href=\"#\">\n            United Remote Front-end Challenge\n          </Hink>{' '}\n          {new Date().getFullYear()}\n          {'.'}\n        </Typography>\n    );\n}\n\nconst Footer = () => {\n  return(\n    <div>\n      <div style={phantom}/>\n      <div style={style}>\n        <Copyright />\n      </div>  \n    </div>      \n  );\n}\n\nexport default Footer;","import React from 'react';\nimport Routes from './routes';\nimport Navbar from './commun/navbar';\n\nimport Footer from './commun/footer'; \nconst App= ()=> {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Routes/>\n      <Footer/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from \"axios\";\n\n const request = (config, token)=> {\n\n  const responsePromise = axios({\n    ...config,\n    \"headers\": {\"Authorization\": token},\n  });\n  return responsePromise;\n};\nexport default request;","import {takeLatest, put,call} from \"redux-saga/effects\";\nimport {getDataSuccess,getDataError} from '../actions/dataAction'\nimport { select } from 'redux-saga/effects'; \nimport request from './helper';\n\nconst getData =\n  function *getData (indice) {\n    try {\n      const response = yield call(request, {\n        \"url\": `https://api.github.com/search/repositories?q=created:>2017-10-22&sort=stars&order=desc&page=${indice.indice}`,\n        \"method\": \"get\"\n      });\n      if(response)\n      {\n        var oldData = yield select ((state) => state.data.Data)\n        var newData = response.data.items;\n        var data = null;\n       if(indice.indice !== 0)\n            data = oldData.concat(newData);\n        else\n            data = newData;\n        yield put(getDataSuccess({status : 200, isData: true, Data : data}));\n      }\n        \n      else\n        yield put(getDataError({status : 400,error : 'Bad request'}))\n    }catch (error) {\n      if (error.response) {\n        yield put(getDataError({status : 500,error : 'Internal Server Error'}));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"GET_DATA\", getData);\n}","import {fork,all} from \"redux-saga/effects\"\nimport dataSaga from './dataSaga';\nexport default function *(){\n    yield all([\n        fork(dataSaga),\n    ]);   \n}","import {GET_DATA_SUCCESS,GET_DATA_ERROR} from '../actions/dataAction';\nconst DEFAULT_STATE = {\n    status: 'DEFAULT STATE',\n    isData: false,\n    Data : null,\n    error : null\n  };\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_DATA_SUCCESS :\n            return {status: action.status, isData: true, Data : action.Data};\n        case GET_DATA_ERROR :\n            return {status: action.status, isData: false, error : action.error};\n        default :\n          {\n            return state;\n          }\n            \n    }\n  }","import {combineReducers} from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport dataReducer from './dataReducer'\nconst combinedReducers = (history) =>combineReducers({\n    \"router\" : connectRouter(history),\n    \"data\" : dataReducer\n});\nexport default combinedReducers;","import {applyMiddleware, compose, createStore} from \"redux\";\nimport {createBrowserHistory} from \"history\";\nimport {routerMiddleware} from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\"\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\n// import {persistReducer} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n// const persistConfig = {\n//   \"key\": \"use-app\",\n//   storage: storage,\n//   whitelist: \"\",\n// };\n// const persistedReducer = persistReducer(persistConfig,rootReducer(history));\nconst configureStore = () => {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const Store = createStore(\n        rootReducer(history),\n        composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n    );\n    sagaMiddleware.run(rootSaga);\n    if (module.hot) {\n        module.hot.accept(\"./reducers\", () => {\n          Store.replaceReducer(rootReducer(history));\n        });\n      }\n    return Store;\n}\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux'\nimport configureStore, {history} from './store';\nimport { ConnectedRouter } from 'connected-react-router';\n\nconst  store = configureStore();\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>\n    , document.getElementById('root')\n);\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/404.45648724.png\";"],"sourceRoot":""}